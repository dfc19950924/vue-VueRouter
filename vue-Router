vuerouter是vueJS的官方的路由管理器。使得构建单页面应用变得易如反掌。其包含的功能有(来自官方文档)：
（1）嵌套的路由、视图表
（2）模块化的，基于组件的路由配置
（3）路由参数、查询、通配符
（4）基于 Vue.js 过渡系统的视图过渡效果
（5）细粒度的导航控制
（6）带有自动激活的 CSS class 的链接
（7）HTML5 历史模式或 hash 模式，在 IE9 中自动降级08
（8）自定义的滚动条行为
大白话开始陈述：
我们使用vue router时，需要我们我们做的就是将组件（components）映射到路由（routers），然后告诉vue router在哪里渲染它们。
vue-router是Vue.js官方的路由插件，它和vue.js是深度集成的，适合用于构建单页面应用。
传统的页面应用，是用一些超链接来实现页面切换和跳转的。在vue-router单页面应用中，则是路径之间的切换，也就是组件的切换
1 动态路由匹配
看下面这个例子：
#定义路由
export default new Router({
  routes: [
    {
      path: '/BookDetails/:book_id',
      name: 'BookDetails',
      component: BookDetails
    },
    {
      path: '/BookDetailsTwo/user/:username/book/:book_id',
      name: 'BookDetailsTwo',
      component: BookDetailsTwo
    },
  ]
})
#页面
<template>
  <div class="book">
    <router-link :to="{ name:'BookDetails',
                         params: { book_id: 1}}">跳转书籍详情</router-link>
    <router-link :to="{ name:'BookDetailsTwo',
                         params: { book_id: 1,username: '小嘟嘟'}}">跳转高级书籍详情</router-link>
  </div>
</template>



